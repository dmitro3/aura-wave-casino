-- ===================================================
-- UPDATE LEVEL REQUIREMENTS - NEW XP SYSTEM (FIXED)
-- ===================================================
-- Updates level requirements to the new XP progression system
-- Based on user-provided requirements where each level has specific XP needed to reach next level
-- FIXED: Proper variable declarations for FOR loops

-- ===================================================
-- STEP 1: Clear existing level requirements
-- ===================================================

DELETE FROM public.level_rewards;

-- ===================================================
-- STEP 2: Insert new level requirements
-- ===================================================

INSERT INTO public.level_rewards (level, xp_required, bonus_amount) VALUES
(1, 651, 100),
(2, 651, 100),
(3, 651, 100),
(4, 651, 100),
(5, 651, 100),
(6, 651, 100),
(7, 651, 100),
(8, 651, 100),
(9, 651, 100),
(10, 651, 100),
(11, 678, 110),
(12, 678, 110),
(13, 678, 110),
(14, 678, 110),
(15, 678, 110),
(16, 678, 110),
(17, 678, 110),
(18, 678, 110),
(19, 678, 110),
(20, 678, 110),
(21, 707, 120),
(22, 707, 120),
(23, 707, 120),
(24, 707, 120),
(25, 707, 120),
(26, 707, 120),
(27, 707, 120),
(28, 707, 120),
(29, 707, 120),
(30, 707, 120),
(31, 738, 130),
(32, 738, 130),
(33, 738, 130),
(34, 738, 130),
(35, 738, 130),
(36, 738, 130),
(37, 738, 130),
(38, 738, 130),
(39, 738, 130),
(40, 738, 130),
(41, 770, 140),
(42, 770, 140),
(43, 770, 140),
(44, 770, 140),
(45, 770, 140),
(46, 770, 140),
(47, 770, 140),
(48, 770, 140),
(49, 770, 140),
(50, 770, 140),
(51, 803, 150),
(52, 803, 150),
(53, 803, 150),
(54, 803, 150),
(55, 803, 150),
(56, 803, 150),
(57, 803, 150),
(58, 803, 150),
(59, 803, 150),
(60, 803, 150),
(61, 837, 160),
(62, 837, 160),
(63, 837, 160),
(64, 837, 160),
(65, 837, 160),
(66, 837, 160),
(67, 837, 160),
(68, 837, 160),
(69, 837, 160),
(70, 837, 160),
(71, 874, 170),
(72, 874, 170),
(73, 874, 170),
(74, 874, 170),
(75, 874, 170),
(76, 874, 170),
(77, 874, 170),
(78, 874, 170),
(79, 874, 170),
(80, 874, 170),
(81, 911, 180),
(82, 911, 180),
(83, 911, 180),
(84, 911, 180),
(85, 911, 180),
(86, 911, 180),
(87, 911, 180),
(88, 911, 180),
(89, 911, 180),
(90, 911, 180),
(91, 950, 190),
(92, 950, 190),
(93, 950, 190),
(94, 950, 190),
(95, 950, 190),
(96, 950, 190),
(97, 950, 190),
(98, 950, 190),
(99, 950, 190),
(100, 950, 200),
(101, 992, 200),
(102, 992, 200),
(103, 992, 200),
(104, 992, 200),
(105, 992, 200),
(106, 992, 200),
(107, 992, 200),
(108, 992, 200),
(109, 992, 200),
(110, 992, 200),
(111, 1034, 220),
(112, 1034, 220),
(113, 1034, 220),
(114, 1034, 220),
(115, 1034, 220),
(116, 1034, 220),
(117, 1034, 220),
(118, 1034, 220),
(119, 1034, 220),
(120, 1034, 220),
(121, 1078, 240),
(122, 1078, 240),
(123, 1078, 240),
(124, 1078, 240),
(125, 1078, 240),
(126, 1078, 240),
(127, 1078, 240),
(128, 1078, 240),
(129, 1078, 240),
(130, 1078, 240),
(131, 1124, 260),
(132, 1124, 260),
(133, 1124, 260),
(134, 1124, 260),
(135, 1124, 260),
(136, 1124, 260),
(137, 1124, 260),
(138, 1124, 260),
(139, 1124, 260),
(140, 1124, 260),
(141, 1173, 280),
(142, 1173, 280),
(143, 1173, 280),
(144, 1173, 280),
(145, 1173, 280),
(146, 1173, 280),
(147, 1173, 280),
(148, 1173, 280),
(149, 1173, 280),
(150, 1173, 300),
(151, 1224, 300),
(152, 1224, 300),
(153, 1224, 300),
(154, 1224, 300),
(155, 1224, 300),
(156, 1224, 300),
(157, 1224, 300),
(158, 1224, 300),
(159, 1224, 300),
(160, 1224, 300),
(161, 1276, 320),
(162, 1276, 320),
(163, 1276, 320),
(164, 1276, 320),
(165, 1276, 320),
(166, 1276, 320),
(167, 1276, 320),
(168, 1276, 320),
(169, 1276, 320),
(170, 1276, 320),
(171, 1331, 340),
(172, 1331, 340),
(173, 1331, 340),
(174, 1331, 340),
(175, 1331, 340),
(176, 1331, 340),
(177, 1331, 340),
(178, 1331, 340),
(179, 1331, 340),
(180, 1331, 340),
(181, 1388, 360),
(182, 1388, 360),
(183, 1388, 360),
(184, 1388, 360),
(185, 1388, 360),
(186, 1388, 360),
(187, 1388, 360),
(188, 1388, 360),
(189, 1388, 360),
(190, 1388, 360),
(191, 1448, 380),
(192, 1448, 380),
(193, 1448, 380),
(194, 1448, 380),
(195, 1448, 380),
(196, 1448, 380),
(197, 1448, 380),
(198, 1448, 380),
(199, 1448, 380),
(200, 1448, 400),
(201, 1510, 400),
(202, 1510, 400),
(203, 1510, 400),
(204, 1510, 400),
(205, 1510, 400),
(206, 1510, 400),
(207, 1510, 400),
(208, 1510, 400),
(209, 1510, 400),
(210, 1510, 400),
(211, 1576, 420),
(212, 1576, 420),
(213, 1576, 420),
(214, 1576, 420),
(215, 1576, 420),
(216, 1576, 420),
(217, 1576, 420),
(218, 1576, 420),
(219, 1576, 420),
(220, 1576, 420),
(221, 1643, 440),
(222, 1643, 440),
(223, 1643, 440),
(224, 1643, 440),
(225, 1643, 440),
(226, 1643, 440),
(227, 1643, 440),
(228, 1643, 440),
(229, 1643, 440),
(230, 1643, 440),
(231, 1713, 460),
(232, 1713, 460),
(233, 1713, 460),
(234, 1713, 460),
(235, 1713, 460),
(236, 1713, 460),
(237, 1713, 460),
(238, 1713, 460),
(239, 1713, 460),
(240, 1713, 460),
(241, 1787, 480),
(242, 1787, 480),
(243, 1787, 480),
(244, 1787, 480),
(245, 1787, 480),
(246, 1787, 480),
(247, 1787, 480),
(248, 1787, 480),
(249, 1787, 480),
(250, 1787, 500),
(251, 1864, 500),
(252, 1864, 500),
(253, 1864, 500),
(254, 1864, 500),
(255, 1864, 500),
(256, 1864, 500),
(257, 1864, 500),
(258, 1864, 500),
(259, 1864, 500),
(260, 1864, 500),
(261, 1944, 520),
(262, 1944, 520),
(263, 1944, 520),
(264, 1944, 520),
(265, 1944, 520),
(266, 1944, 520),
(267, 1944, 520),
(268, 1944, 520),
(269, 1944, 520),
(270, 1944, 520),
(271, 2028, 540),
(272, 2028, 540),
(273, 2028, 540),
(274, 2028, 540),
(275, 2028, 540),
(276, 2028, 540),
(277, 2028, 540),
(278, 2028, 540),
(279, 2028, 540),
(280, 2028, 540),
(281, 2115, 560),
(282, 2115, 560),
(283, 2115, 560),
(284, 2115, 560),
(285, 2115, 560),
(286, 2115, 560),
(287, 2115, 560),
(288, 2115, 560),
(289, 2115, 560),
(290, 2115, 560),
(291, 2206, 580),
(292, 2206, 580),
(293, 2206, 580),
(294, 2206, 580),
(295, 2206, 580),
(296, 2206, 580),
(297, 2206, 580),
(298, 2206, 580),
(299, 2206, 580),
(300, 2206, 600),
(301, 2301, 600),
(302, 2301, 600),
(303, 2301, 600),
(304, 2301, 600),
(305, 2301, 600),
(306, 2301, 600),
(307, 2301, 600),
(308, 2301, 600),
(309, 2301, 600),
(310, 2301, 600),
(311, 2399, 620),
(312, 2399, 620),
(313, 2399, 620),
(314, 2399, 620),
(315, 2399, 620),
(316, 2399, 620),
(317, 2399, 620),
(318, 2399, 620),
(319, 2399, 620),
(320, 2399, 620),
(321, 2503, 640),
(322, 2503, 640),
(323, 2503, 640),
(324, 2503, 640),
(325, 2503, 640),
(326, 2503, 640),
(327, 2503, 640),
(328, 2503, 640),
(329, 2503, 640),
(330, 2503, 640),
(331, 2610, 660),
(332, 2610, 660),
(333, 2610, 660),
(334, 2610, 660),
(335, 2610, 660),
(336, 2610, 660),
(337, 2610, 660),
(338, 2610, 660),
(339, 2610, 660),
(340, 2610, 660),
(341, 2723, 680),
(342, 2723, 680),
(343, 2723, 680),
(344, 2723, 680),
(345, 2723, 680),
(346, 2723, 680),
(347, 2723, 680),
(348, 2723, 680),
(349, 2723, 680),
(350, 2723, 700),
(351, 2840, 700),
(352, 2840, 700),
(353, 2840, 700),
(354, 2840, 700),
(355, 2840, 700),
(356, 2840, 700),
(357, 2840, 700),
(358, 2840, 700),
(359, 2840, 700),
(360, 2840, 700),
(361, 2962, 720),
(362, 2962, 720),
(363, 2962, 720),
(364, 2962, 720),
(365, 2962, 720),
(366, 2962, 720),
(367, 2962, 720),
(368, 2962, 720),
(369, 2962, 720),
(370, 2962, 720),
(371, 3089, 740),
(372, 3089, 740),
(373, 3089, 740),
(374, 3089, 740),
(375, 3089, 740),
(376, 3089, 740),
(377, 3089, 740),
(378, 3089, 740),
(379, 3089, 740),
(380, 3089, 740),
(381, 3222, 760),
(382, 3222, 760),
(383, 3222, 760),
(384, 3222, 760),
(385, 3222, 760),
(386, 3222, 760),
(387, 3222, 760),
(388, 3222, 760),
(389, 3222, 760),
(390, 3222, 760),
(391, 3361, 780),
(392, 3361, 780),
(393, 3361, 780),
(394, 3361, 780),
(395, 3361, 780),
(396, 3361, 780),
(397, 3361, 780),
(398, 3361, 780),
(399, 3361, 780),
(400, 3361, 800),
(401, 3505, 800),
(402, 3505, 800),
(403, 3505, 800),
(404, 3505, 800),
(405, 3505, 800),
(406, 3505, 800),
(407, 3505, 800),
(408, 3505, 800),
(409, 3505, 800),
(410, 3505, 800),
(411, 3656, 820),
(412, 3656, 820),
(413, 3656, 820),
(414, 3656, 820),
(415, 3656, 820),
(416, 3656, 820),
(417, 3656, 820),
(418, 3656, 820),
(419, 3656, 820),
(420, 3656, 820),
(421, 3813, 840),
(422, 3813, 840),
(423, 3813, 840),
(424, 3813, 840),
(425, 3813, 840),
(426, 3813, 840),
(427, 3813, 840),
(428, 3813, 840),
(429, 3813, 840),
(430, 3813, 840),
(431, 3977, 860),
(432, 3977, 860),
(433, 3977, 860),
(434, 3977, 860),
(435, 3977, 860),
(436, 3977, 860),
(437, 3977, 860),
(438, 3977, 860),
(439, 3977, 860),
(440, 3977, 860),
(441, 4148, 880),
(442, 4148, 880),
(443, 4148, 880),
(444, 4148, 880),
(445, 4148, 880),
(446, 4148, 880),
(447, 4148, 880),
(448, 4148, 880),
(449, 4148, 880),
(450, 4148, 900),
(451, 4327, 900),
(452, 4327, 900),
(453, 4327, 900),
(454, 4327, 900),
(455, 4327, 900),
(456, 4327, 900),
(457, 4327, 900),
(458, 4327, 900),
(459, 4327, 900),
(460, 4327, 900),
(461, 4513, 920),
(462, 4513, 920),
(463, 4513, 920),
(464, 4513, 920),
(465, 4513, 920),
(466, 4513, 920),
(467, 4513, 920),
(468, 4513, 920),
(469, 4513, 920),
(470, 4513, 920),
(471, 4707, 940),
(472, 4707, 940),
(473, 4707, 940),
(474, 4707, 940),
(475, 4707, 940),
(476, 4707, 940),
(477, 4707, 940),
(478, 4707, 940),
(479, 4707, 940),
(480, 4707, 940),
(481, 4909, 960),
(482, 4909, 960),
(483, 4909, 960),
(484, 4909, 960),
(485, 4909, 960),
(486, 4909, 960),
(487, 4909, 960),
(488, 4909, 960),
(489, 4909, 960),
(490, 4909, 960),
(491, 5120, 980),
(492, 5120, 980),
(493, 5120, 980),
(494, 5120, 980),
(495, 5120, 980),
(496, 5120, 980),
(497, 5120, 980),
(498, 5120, 980),
(499, 5120, 980),
(500, 5120, 1000),
(501, 5340, 1000),
(502, 5340, 1000),
(503, 5340, 1000),
(504, 5340, 1000),
(505, 5340, 1000),
(506, 5340, 1000),
(507, 5340, 1000),
(508, 5340, 1000),
(509, 5340, 1000),
(510, 5340, 1000),
(511, 5570, 1020),
(512, 5570, 1020),
(513, 5570, 1020),
(514, 5570, 1020),
(515, 5570, 1020),
(516, 5570, 1020),
(517, 5570, 1020),
(518, 5570, 1020),
(519, 5570, 1020),
(520, 5570, 1020),
(521, 5810, 1040),
(522, 5810, 1040),
(523, 5810, 1040),
(524, 5810, 1040),
(525, 5810, 1040),
(526, 5810, 1040),
(527, 5810, 1040),
(528, 5810, 1040),
(529, 5810, 1040),
(530, 5810, 1040),
(531, 6059, 1060),
(532, 6059, 1060),
(533, 6059, 1060),
(534, 6059, 1060),
(535, 6059, 1060),
(536, 6059, 1060),
(537, 6059, 1060),
(538, 6059, 1060),
(539, 6059, 1060),
(540, 6059, 1060),
(541, 6320, 1080),
(542, 6320, 1080),
(543, 6320, 1080),
(544, 6320, 1080),
(545, 6320, 1080),
(546, 6320, 1080),
(547, 6320, 1080),
(548, 6320, 1080),
(549, 6320, 1080),
(550, 6320, 1100),
(551, 6592, 1100),
(552, 6592, 1100),
(553, 6592, 1100),
(554, 6592, 1100),
(555, 6592, 1100),
(556, 6592, 1100),
(557, 6592, 1100),
(558, 6592, 1100),
(559, 6592, 1100),
(560, 6592, 1100),
(561, 6875, 1120),
(562, 6875, 1120),
(563, 6875, 1120),
(564, 6875, 1120),
(565, 6875, 1120),
(566, 6875, 1120),
(567, 6875, 1120),
(568, 6875, 1120),
(569, 6875, 1120),
(570, 6875, 1120),
(571, 7171, 1140),
(572, 7171, 1140),
(573, 7171, 1140),
(574, 7171, 1140),
(575, 7171, 1140),
(576, 7171, 1140),
(577, 7171, 1140),
(578, 7171, 1140),
(579, 7171, 1140),
(580, 7171, 1140),
(581, 7479, 1160),
(582, 7479, 1160),
(583, 7479, 1160),
(584, 7479, 1160),
(585, 7479, 1160),
(586, 7479, 1160),
(587, 7479, 1160),
(588, 7479, 1160),
(589, 7479, 1160),
(590, 7479, 1160),
(591, 7801, 1180),
(592, 7801, 1180),
(593, 7801, 1180),
(594, 7801, 1180),
(595, 7801, 1180),
(596, 7801, 1180),
(597, 7801, 1180),
(598, 7801, 1180),
(599, 7801, 1180),
(600, 7801, 1200),
(601, 8136, 1200),
(602, 8136, 1200),
(603, 8136, 1200),
(604, 8136, 1200),
(605, 8136, 1200),
(606, 8136, 1200),
(607, 8136, 1200),
(608, 8136, 1200),
(609, 8136, 1200),
(610, 8136, 1200),
(611, 8486, 1220),
(612, 8486, 1220),
(613, 8486, 1220),
(614, 8486, 1220),
(615, 8486, 1220),
(616, 8486, 1220),
(617, 8486, 1220),
(618, 8486, 1220),
(619, 8486, 1220),
(620, 8486, 1220),
(621, 8851, 1240),
(622, 8851, 1240),
(623, 8851, 1240),
(624, 8851, 1240),
(625, 8851, 1240),
(626, 8851, 1240),
(627, 8851, 1240),
(628, 8851, 1240),
(629, 8851, 1240),
(630, 8851, 1240),
(631, 9231, 1260),
(632, 9231, 1260),
(633, 9231, 1260),
(634, 9231, 1260),
(635, 9231, 1260),
(636, 9231, 1260),
(637, 9231, 1260),
(638, 9231, 1260),
(639, 9231, 1260),
(640, 9231, 1260),
(641, 9628, 1280),
(642, 9628, 1280),
(643, 9628, 1280),
(644, 9628, 1280),
(645, 9628, 1280),
(646, 9628, 1280),
(647, 9628, 1280),
(648, 9628, 1280),
(649, 9628, 1280),
(650, 9628, 1300),
(651, 10043, 1300),
(652, 10043, 1300),
(653, 10043, 1300),
(654, 10043, 1300),
(655, 10043, 1300),
(656, 10043, 1300),
(657, 10043, 1300),
(658, 10043, 1300),
(659, 10043, 1300),
(660, 10043, 1300),
(661, 10475, 1320),
(662, 10475, 1320),
(663, 10475, 1320),
(664, 10475, 1320),
(665, 10475, 1320),
(666, 10475, 1320),
(667, 10475, 1320),
(668, 10475, 1320),
(669, 10475, 1320),
(670, 10475, 1320),
(671, 10925, 1340),
(672, 10925, 1340),
(673, 10925, 1340),
(674, 10925, 1340),
(675, 10925, 1340),
(676, 10925, 1340),
(677, 10925, 1340),
(678, 10925, 1340),
(679, 10925, 1340),
(680, 10925, 1340),
(681, 11394, 1360),
(682, 11394, 1360),
(683, 11394, 1360),
(684, 11394, 1360),
(685, 11394, 1360),
(686, 11394, 1360),
(687, 11394, 1360),
(688, 11394, 1360),
(689, 11394, 1360),
(690, 11394, 1360),
(691, 11885, 1380),
(692, 11885, 1380),
(693, 11885, 1380),
(694, 11885, 1380),
(695, 11885, 1380),
(696, 11885, 1380),
(697, 11885, 1380),
(698, 11885, 1380),
(699, 11885, 1380),
(700, 11885, 1400),
(701, 12395, 1400),
(702, 12395, 1400),
(703, 12395, 1400),
(704, 12395, 1400),
(705, 12395, 1400),
(706, 12395, 1400),
(707, 12395, 1400),
(708, 12395, 1400),
(709, 12395, 1400),
(710, 12395, 1400),
(711, 12928, 1420),
(712, 12928, 1420),
(713, 12928, 1420),
(714, 12928, 1420),
(715, 12928, 1420),
(716, 12928, 1420),
(717, 12928, 1420),
(718, 12928, 1420),
(719, 12928, 1420),
(720, 12928, 1420),
(721, 13484, 1440),
(722, 13484, 1440),
(723, 13484, 1440),
(724, 13484, 1440),
(725, 13484, 1440),
(726, 13484, 1440),
(727, 13484, 1440),
(728, 13484, 1440),
(729, 13484, 1440),
(730, 13484, 1440),
(731, 14064, 1460),
(732, 14064, 1460),
(733, 14064, 1460),
(734, 14064, 1460),
(735, 14064, 1460),
(736, 14064, 1460),
(737, 14064, 1460),
(738, 14064, 1460),
(739, 14064, 1460),
(740, 14064, 1460),
(741, 14669, 1480),
(742, 14669, 1480),
(743, 14669, 1480),
(744, 14669, 1480),
(745, 14669, 1480),
(746, 14669, 1480),
(747, 14669, 1480),
(748, 14669, 1480),
(749, 14669, 1480),
(750, 14669, 1500),
(751, 15300, 1500),
(752, 15300, 1500),
(753, 15300, 1500),
(754, 15300, 1500),
(755, 15300, 1500),
(756, 15300, 1500),
(757, 15300, 1500),
(758, 15300, 1500),
(759, 15300, 1500),
(760, 15300, 1500),
(761, 15958, 1520),
(762, 15958, 1520),
(763, 15958, 1520),
(764, 15958, 1520),
(765, 15958, 1520),
(766, 15958, 1520),
(767, 15958, 1520),
(768, 15958, 1520),
(769, 15958, 1520),
(770, 15958, 1520),
(771, 16644, 1540),
(772, 16644, 1540),
(773, 16644, 1540),
(774, 16644, 1540),
(775, 16644, 1540),
(776, 16644, 1540),
(777, 16644, 1540),
(778, 16644, 1540),
(779, 16644, 1540),
(780, 16644, 1540),
(781, 17359, 1560),
(782, 17359, 1560),
(783, 17359, 1560),
(784, 17359, 1560),
(785, 17359, 1560),
(786, 17359, 1560),
(787, 17359, 1560),
(788, 17359, 1560),
(789, 17359, 1560),
(790, 17359, 1560),
(791, 18106, 1580),
(792, 18106, 1580),
(793, 18106, 1580),
(794, 18106, 1580),
(795, 18106, 1580),
(796, 18106, 1580),
(797, 18106, 1580),
(798, 18106, 1580),
(799, 18106, 1580),
(800, 18106, 1600),
(801, 18884, 1600),
(802, 18884, 1600),
(803, 18884, 1600),
(804, 18884, 1600),
(805, 18884, 1600),
(806, 18884, 1600),
(807, 18884, 1600),
(808, 18884, 1600),
(809, 18884, 1600),
(810, 18884, 1600),
(811, 19696, 1620),
(812, 19696, 1620),
(813, 19696, 1620),
(814, 19696, 1620),
(815, 19696, 1620),
(816, 19696, 1620),
(817, 19696, 1620),
(818, 19696, 1620),
(819, 19696, 1620),
(820, 19696, 1620),
(821, 20543, 1640),
(822, 20543, 1640),
(823, 20543, 1640),
(824, 20543, 1640),
(825, 20543, 1640),
(826, 20543, 1640),
(827, 20543, 1640),
(828, 20543, 1640),
(829, 20543, 1640),
(830, 20543, 1640),
(831, 21426, 1660),
(832, 21426, 1660),
(833, 21426, 1660),
(834, 21426, 1660),
(835, 21426, 1660),
(836, 21426, 1660),
(837, 21426, 1660),
(838, 21426, 1660),
(839, 21426, 1660),
(840, 21426, 1660),
(841, 22348, 1680),
(842, 22348, 1680),
(843, 22348, 1680),
(844, 22348, 1680),
(845, 22348, 1680),
(846, 22348, 1680),
(847, 22348, 1680),
(848, 22348, 1680),
(849, 22348, 1680),
(850, 22348, 1700),
(851, 23309, 1700),
(852, 23309, 1700),
(853, 23309, 1700),
(854, 23309, 1700),
(855, 23309, 1700),
(856, 23309, 1700),
(857, 23309, 1700),
(858, 23309, 1700),
(859, 23309, 1700),
(860, 23309, 1700),
(861, 24311, 1720),
(862, 24311, 1720),
(863, 24311, 1720),
(864, 24311, 1720),
(865, 24311, 1720),
(866, 24311, 1720),
(867, 24311, 1720),
(868, 24311, 1720),
(869, 24311, 1720),
(870, 24311, 1720),
(871, 25357, 1740),
(872, 25357, 1740),
(873, 25357, 1740),
(874, 25357, 1740),
(875, 25357, 1740),
(876, 25357, 1740),
(877, 25357, 1740),
(878, 25357, 1740),
(879, 25357, 1740),
(880, 25357, 1740),
(881, 26447, 1760),
(882, 26447, 1760),
(883, 26447, 1760),
(884, 26447, 1760),
(885, 26447, 1760),
(886, 26447, 1760),
(887, 26447, 1760),
(888, 26447, 1760),
(889, 26447, 1760),
(890, 26447, 1760),
(891, 27584, 1780),
(892, 27584, 1780),
(893, 27584, 1780),
(894, 27584, 1780),
(895, 27584, 1780),
(896, 27584, 1780),
(897, 27584, 1780),
(898, 27584, 1780),
(899, 27584, 1780),
(900, 27584, 1800),
(901, 28770, 1800),
(902, 28770, 1800),
(903, 28770, 1800),
(904, 28770, 1800),
(905, 28770, 1800),
(906, 28770, 1800),
(907, 28770, 1800),
(908, 28770, 1800),
(909, 28770, 1800),
(910, 28770, 1800),
(911, 30007, 1820),
(912, 30007, 1820),
(913, 30007, 1820),
(914, 30007, 1820),
(915, 30007, 1820),
(916, 30007, 1820),
(917, 30007, 1820),
(918, 30007, 1820),
(919, 30007, 1820),
(920, 30007, 1820),
(921, 31298, 1840),
(922, 31298, 1840),
(923, 31298, 1840),
(924, 31298, 1840),
(925, 31298, 1840),
(926, 31298, 1840),
(927, 31298, 1840),
(928, 31298, 1840),
(929, 31298, 1840),
(930, 31298, 1840),
(931, 32643, 1860),
(932, 32643, 1860),
(933, 32643, 1860),
(934, 32643, 1860),
(935, 32643, 1860),
(936, 32643, 1860),
(937, 32643, 1860),
(938, 32643, 1860),
(939, 32643, 1860),
(940, 32643, 1860),
(941, 34047, 1880),
(942, 34047, 1880),
(943, 34047, 1880),
(944, 34047, 1880),
(945, 34047, 1880),
(946, 34047, 1880),
(947, 34047, 1880),
(948, 34047, 1880),
(949, 34047, 1880),
(950, 34047, 1900),
(951, 35511, 1900),
(952, 35511, 1900),
(953, 35511, 1900),
(954, 35511, 1900),
(955, 35511, 1900),
(956, 35511, 1900),
(957, 35511, 1900),
(958, 35511, 1900),
(959, 35511, 1900),
(960, 35511, 1900),
(961, 37038, 1920),
(962, 37038, 1920),
(963, 37038, 1920),
(964, 37038, 1920),
(965, 37038, 1920),
(966, 37038, 1920),
(967, 37038, 1920),
(968, 37038, 1920),
(969, 37038, 1920),
(970, 37038, 1920),
(971, 38630, 1940),
(972, 38630, 1940),
(973, 38630, 1940),
(974, 38630, 1940),
(975, 38630, 1940),
(976, 38630, 1940),
(977, 38630, 1940),
(978, 38630, 1940),
(979, 38630, 1940),
(980, 38630, 1940),
(981, 40292, 1960),
(982, 40292, 1960),
(983, 40292, 1960),
(984, 40292, 1960),
(985, 40292, 1960),
(986, 40292, 1960),
(987, 40292, 1960),
(988, 40292, 1960),
(989, 40292, 1960),
(990, 40292, 1960),
(991, 42024, 1980),
(992, 42024, 1980),
(993, 42024, 1980),
(994, 42024, 1980),
(995, 42024, 1980),
(996, 42024, 1980),
(997, 42024, 1980),
(998, 42024, 1980),
(999, 42024, 2000);

-- ===================================================
-- STEP 3: Recreate the level calculation function with new requirements
-- ===================================================

-- Drop and recreate the level calculation function to use the new requirements
DROP FUNCTION IF EXISTS public.calculate_level_from_xp_new(integer) CASCADE;

CREATE OR REPLACE FUNCTION public.calculate_level_from_xp_new(total_xp integer)
RETURNS TABLE(level integer, current_level_xp integer, xp_to_next integer)
LANGUAGE plpgsql
IMMUTABLE
SECURITY DEFINER
SET search_path = 'public'
AS $$
DECLARE
  cumulative_xp integer := 0;
  current_level integer := 1;
  current_xp_in_level integer := 0;
  xp_needed_for_next integer := 651; -- Default for level 1->2
  level_req RECORD;
BEGIN
  -- Handle edge cases
  IF total_xp < 0 THEN
    total_xp := 0;
  END IF;
  
  -- For level 1, check if we have enough XP to reach level 2
  IF total_xp < 651 THEN
    RETURN QUERY SELECT 1, total_xp, (651 - total_xp);
    RETURN;
  END IF;
  
  -- Find the current level by iterating through requirements
  FOR level_req IN 
    SELECT lr.level, lr.xp_required 
    FROM public.level_rewards lr 
    ORDER BY lr.level ASC
  LOOP
    IF total_xp < (cumulative_xp + level_req.xp_required) THEN
      -- Found the current level
      current_level := level_req.level;
      
      -- Calculate current level XP (XP within this level)
      current_xp_in_level := total_xp - cumulative_xp;
      
      -- Calculate XP needed to reach next level
      xp_needed_for_next := level_req.xp_required - current_xp_in_level;
      
      RETURN QUERY SELECT current_level, current_xp_in_level, xp_needed_for_next;
      RETURN;
    END IF;
    
    -- Add this level's requirement to cumulative
    cumulative_xp := cumulative_xp + level_req.xp_required;
    current_level := level_req.level + 1;
  END LOOP;
  
  -- If we get here, user has exceeded all defined levels
  -- Return the highest level with 0 XP needed for next
  SELECT lr.level INTO current_level
  FROM public.level_rewards lr 
  ORDER BY lr.level DESC 
  LIMIT 1;
  
  -- For max level users, show remaining XP in their current progress
  SELECT lr.xp_required INTO xp_needed_for_next
  FROM public.level_rewards lr 
  WHERE lr.level = current_level;
  
  current_xp_in_level := total_xp - cumulative_xp + COALESCE(xp_needed_for_next, 0);
  
  RETURN QUERY SELECT current_level, current_xp_in_level, 0;
END;
$$;

-- ===================================================
-- STEP 4: Update all existing users' level information
-- ===================================================

-- Recalculate levels for all users based on their current lifetime_xp
DO $$
DECLARE
    user_record RECORD;
    level_calc RECORD;
BEGIN
    FOR user_record IN SELECT id, lifetime_xp FROM public.profiles WHERE lifetime_xp > 0 LOOP
        -- Calculate new level information
        SELECT * INTO level_calc FROM public.calculate_level_from_xp_new(FLOOR(user_record.lifetime_xp)::integer);
        
        -- Update user's level information
        UPDATE public.profiles 
        SET 
            current_level = level_calc.level,
            level = level_calc.level,
            current_xp = level_calc.current_level_xp,
            xp_to_next_level = level_calc.xp_to_next,
            updated_at = now()
        WHERE id = user_record.id;
        
        RAISE NOTICE 'Updated user % - Level: %, Current XP: %, XP to Next: %', 
            user_record.id, level_calc.level, level_calc.current_level_xp, level_calc.xp_to_next;
    END LOOP;
END;
$$;

-- ===================================================
-- STEP 5: Update user_level_stats table as well
-- ===================================================

-- Recalculate levels for all users in user_level_stats table
DO $$
DECLARE
    user_record RECORD;
    level_calc RECORD;
BEGIN
    FOR user_record IN SELECT user_id, lifetime_xp FROM public.user_level_stats WHERE lifetime_xp > 0 LOOP
        -- Calculate new level information
        SELECT * INTO level_calc FROM public.calculate_level_from_xp_new(user_record.lifetime_xp);
        
        -- Update user's level information
        UPDATE public.user_level_stats 
        SET 
            current_level = level_calc.level,
            current_level_xp = level_calc.current_level_xp,
            xp_to_next_level = level_calc.xp_to_next,
            updated_at = now()
        WHERE user_id = user_record.user_id;
        
        RAISE NOTICE 'Updated user_level_stats % - Level: %, Current XP: %, XP to Next: %', 
            user_record.user_id, level_calc.level, level_calc.current_level_xp, level_calc.xp_to_next;
    END LOOP;
END;
$$;

-- ===================================================
-- STEP 6: Test the new system
-- ===================================================

-- Show sample level requirements
SELECT 
    'NEW LEVEL REQUIREMENTS' as test_name,
    level,
    xp_required,
    bonus_amount
FROM public.level_rewards 
WHERE level IN (1, 2, 11, 21, 50, 100, 200, 500, 999)
ORDER BY level;

-- Test level calculation function
SELECT 
    'LEVEL CALCULATION TEST' as test_name,
    total_xp,
    level,
    current_level_xp,
    xp_to_next
FROM (
    SELECT 
        test_xp as total_xp,
        calc.*
    FROM (VALUES (0), (300), (651), (1000), (2000), (5000), (10000)) AS test_data(test_xp)
    CROSS JOIN LATERAL public.calculate_level_from_xp_new(test_data.test_xp) AS calc
) results
ORDER BY total_xp;

SELECT 'NEW LEVEL REQUIREMENTS SYSTEM INSTALLED SUCCESSFULLY' as status,
       'Level 1-10: 651 XP each' as level_1_10,
       'Level 11-20: 678 XP each' as level_11_20,
       'Level 21-30: 707 XP each' as level_21_30,
       'Progressive scaling continues to level 999' as scaling,
       'All users recalculated to new system' as migration;